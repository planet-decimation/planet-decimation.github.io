{"version":3,"sources":["Game/GameView.js","Game/SideBar.js","Game/TopBar.js","Network/NetworkUtil.js","Network/NetworkManager.js","Network/Authentication.js","Game/GamePage.js","Error/ErrorCodes.js","Error/ErrorPage.js","App.js","serviceWorker.js","index.js"],"names":["GameView","react_default","a","createElement","className","React","Component","SideBar","TopBar","this","props","model","name","argRegex","NetworkUtil","format","_len","arguments","length","args","Array","_key","reduce","str","arg","replace","concat","localStorage","planet_decimation_api","window","planetDecimation","setAPI","url","resetAPI","removeItem","NetworkManager","callback","code","location","search","substr","split","find","s","startsWith","request","post","buildURL","body","err","res","href","protocol","host","Authentication","GamePage","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","_this2","authenticate","setState","TopBar_TopBar","SideBar_SideBar","GameView_GameView","ErrorCodes","0","101","102","ErrorPage","match","params","id","Link","to","App","BrowserRouter","Switch","Route","path","component","Game","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","App_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9d87080d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./GameView.css\";\n\nexport default class GameView extends React.Component {\n    render() {\n        return (\n            <div className=\"game-view\">\n\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport \"./SideBar.css\";\n\nexport default class SideBar extends React.Component {\n    render() {\n        return (\n            <div className=\"side-bar\">\n\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport \"./TopBar.css\";\n\nexport default class TopBar extends React.Component {\n    render() {\n        return (\n            <div className=\"top-bar\">\n                <div>{this.props.model.name}</div>\n            </div>\n        );\n    }\n}\n","const defaultURL = \"https://api.planetdecimation.com\";\nconst argRegex = /<[^>]+>/;\n\nexport default class NetworkUtil {\n    static buildURL(format, ...args) {\n        return args.reduce((str, arg) => str.replace(argRegex, arg), `${localStorage.planet_decimation_api || defaultURL}/${format}`).replace(/([^:])\\/\\/+/g, \"$1/\");\n    }\n}\n\nwindow.planetDecimation = window.planetDecimation || {};\nwindow.planetDecimation.setAPI = url => {\n    localStorage.planet_decimation_api = url;\n};\nwindow.planetDecimation.resetAPI = () => {\n    localStorage.removeItem(\"planet_decimation_api\");\n};\n","import Authentication from \"./Authentication\";\n\nexport default class NetworkManager {\n    static authenticate(callback) {\n        return Authentication(callback);\n    }\n}\n","import request from \"request\";\nimport NetworkUtil from \"./NetworkUtil\";\n\nexport default function Authentication(callback) {\n    let code = window.location.search ? window.location.search.substr(1).split(\"&\").find(s => s.startsWith(\"code=\")) : null;\n    if (code) {\n        code = code.substr(5);\n        request.post(NetworkUtil.buildURL(\"/auth/login\"), {\n            \"body\": code\n        }, (err, res, body) => {\n            if (err || !body) {\n                window.location.href = \"/error/102\";\n            } else {\n                callback(body);\n            }\n        });\n    }\n    request(NetworkUtil.buildURL(\"/auth/check\"), (err, res, body) => {\n        if (err || !body) {\n            request(NetworkUtil.buildURL(\"/auth/id\"), (err, res, body) => {\n                if (err || !body) {\n                    window.location.href = \"/error/101\";\n                } else {\n                    window.location.href = `https://accounts.google.com/o/oauth2/v2/auth?client_id=${body}&response_type=code&scope=openid%20email%20profile&redirect_uri=${window.location.protocol}//${window.location.host}`;\n                }\n            });\n        } else {\n            callback(body);\n        }\n    });\n}\n","import React from \"react\";\nimport GameView from \"./GameView\";\nimport SideBar from \"./SideBar\";\nimport TopBar from \"./TopBar\";\nimport NetworkManager from \"../Network/NetworkManager\";\nimport \"./GamePage.css\";\n\nexport default class GamePage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"name\": null\n        };\n    }\n\n    componentDidMount() {\n        NetworkManager.authenticate(name => {\n            this.setState({\n                \"name\": name\n            });\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"game-page\">\n                <div className=\"top\">\n                    <TopBar model={this.state} />\n                </div>\n                <div className=\"bottom\">\n                    <div className=\"left\">\n                        <SideBar model={this.state} />\n                    </div>\n                    <div className=\"right\">\n                        <GameView model={this.state} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","const ErrorCodes = {\n    0: \"Unknown error.\",\n    101: \"Unable to contact authentication server.\",\n    102: \"Authentication refused.\"\n};\nexport default ErrorCodes;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ErrorCodes from \"./ErrorCodes\";\nimport \"./ErrorPage.css\";\n\nexport default class ErrorPage extends React.Component {\n    render() {\n        return (\n            <div className=\"error-page\">\n                <div className=\"pad\" />\n                    <div className=\"main\">\n                        <div className=\"pad\" />\n                        <main>\n                            <h1>Unexpected Error</h1>\n                            <h3>{ErrorCodes[this.props.match.params.id] || ErrorCodes[0]}</h3>\n                            <Link to=\"/\">Retry</Link>\n                        </main>\n                        <div className=\"pad\" />\n                    </div>\n                <div className=\"pad\" />\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Game from \"./Game/GamePage\";\nimport ErrorPage from \"./Error/ErrorPage\";\n\nexport default class App extends React.Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/error/:id\" component={ErrorPage} />\n                    <Route path=\"/\" component={Game} />\n                </Switch>\n            </BrowserRouter>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won\"t work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let\"s check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It\"s the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can\"t reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker.register();\n"],"sourceRoot":""}